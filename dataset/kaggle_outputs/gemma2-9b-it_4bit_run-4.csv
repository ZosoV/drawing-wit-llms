,description,prompt,svg,processed_svg
0,a purple forest at dusk,"Generate SVG code to visually represent the following text description, while respecting the given constraints.
<constraints>
* **Allowed Elements:** `svg`, `path`, `circle`, `rect`, `ellipse`, `line`, `polyline`, `polygon`, `g`, `linearGradient`, `radialGradient`, `stop`, `defs`
* **Allowed Attributes:** `viewBox`, `width`, `height`, `fill`, `stroke`, `stroke-width`, `d`, `cx`, `cy`, `r`, `x`, `y`, `rx`, `ry`, `x1`, `y1`, `x2`, `y2`, `points`, `transform`, `opacity`
</constraints>

<example>
<description>""A red circle with a blue square inside""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <circle cx=""50"" cy=""50"" r=""40"" fill=""red""/>
  <rect x=""30"" y=""30"" width=""40"" height=""40"" fill=""blue""/>
</svg>
```
</example>


Please ensure that the generated SVG code is well-formed, valid, and strictly adheres to these constraints. Focus on a clear and concise representation of the input description within the given limitations. Always give the complete SVG code with nothing omitted. Never use an ellipsis.

<description>""a purple forest at dusk""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
","<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <defs>
    <linearGradient id=""purpleForestDusk"" x1=""0%"" y1=""0%"" x2=""100%"" y2=""100%"">
      <stop offset=""0%"" stop-color=""#800080"" />
      <stop offset=""10%"" stop-color=""#660066"" />
      <stop offset=""20%"" stop-color=""#4c004c"" />
      <stop offset=""50%"" stop-color=""#330033"" />
      <stop offset=""80%"" stop-color=""#190019"" />
      <stop offset=""100%"" stop-color=""#000000"" />
    </linearGradient>
  </defs>
  <rect x=""0"" y=""0"" width=""256"" height=""256"" fill=""url(#purpleForestDusk)""/>
  <rect x=""50"" y=""50"" width=""60"" height=""80"" stroke=""white"" stroke-width=""2""/>
  <rect x=""100"" y=""70"" width=""40"" height=""60"" stroke=""white"" stroke-width=""2"" transform=""rotate(-20 100 70)""/>
  <rect x=""150"" y=""100"" width=""50"" height=""70"" stroke=""white"" stroke-width=""2"" transform=""rotate(-45 150 100)""/>
</svg>","<svg viewBox=""0 0 256 256"" width=""256"" height=""256""><defs><linearGradient id=""purpleForestDusk"" x1=""0%"" y1=""0%"" x2=""100%"" y2=""100%""><stop offset=""0%"" stop-color=""#800080""/><stop offset=""10%"" stop-color=""#660066""/><stop offset=""20%"" stop-color=""#4c004c""/><stop offset=""50%"" stop-color=""#330033""/><stop offset=""80%"" stop-color=""#190019""/><stop offset=""100%"" stop-color=""#000000""/></linearGradient></defs><rect x=""0"" y=""0"" width=""256"" height=""256"" fill=""url(#purpleForestDusk)""/><rect x=""50"" y=""50"" width=""60"" height=""80"" stroke=""white"" stroke-width=""2""/><rect x=""100"" y=""70"" width=""40"" height=""60"" stroke=""white"" stroke-width=""2"" transform=""rotate(-20 100 70)""/><rect x=""150"" y=""100"" width=""50"" height=""70"" stroke=""white"" stroke-width=""2"" transform=""rotate(-45 150 100)""/></svg>"
1,gray wool coat with a faux fur collar,"Generate SVG code to visually represent the following text description, while respecting the given constraints.
<constraints>
* **Allowed Elements:** `svg`, `path`, `circle`, `rect`, `ellipse`, `line`, `polyline`, `polygon`, `g`, `linearGradient`, `radialGradient`, `stop`, `defs`
* **Allowed Attributes:** `viewBox`, `width`, `height`, `fill`, `stroke`, `stroke-width`, `d`, `cx`, `cy`, `r`, `x`, `y`, `rx`, `ry`, `x1`, `y1`, `x2`, `y2`, `points`, `transform`, `opacity`
</constraints>

<example>
<description>""A red circle with a blue square inside""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <circle cx=""50"" cy=""50"" r=""40"" fill=""red""/>
  <rect x=""30"" y=""30"" width=""40"" height=""40"" fill=""blue""/>
</svg>
```
</example>


Please ensure that the generated SVG code is well-formed, valid, and strictly adheres to these constraints. Focus on a clear and concise representation of the input description within the given limitations. Always give the complete SVG code with nothing omitted. Never use an ellipsis.

<description>""gray wool coat with a faux fur collar""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
","<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
<rect x=""30"" y=""30"" width=""196"" height=""200"" fill=""gray"" />
<ellipse cx=""118"" cy=""70"" rx=""30"" ry=""15"" fill=""gray""/>
</svg>","<svg viewBox=""0 0 256 256"" width=""256"" height=""256""><rect x=""30"" y=""30"" width=""196"" height=""200"" fill=""gray""/><ellipse cx=""118"" cy=""70"" rx=""30"" ry=""15"" fill=""gray""/></svg>"
2,a lighthouse overlooking the ocean,"Generate SVG code to visually represent the following text description, while respecting the given constraints.
<constraints>
* **Allowed Elements:** `svg`, `path`, `circle`, `rect`, `ellipse`, `line`, `polyline`, `polygon`, `g`, `linearGradient`, `radialGradient`, `stop`, `defs`
* **Allowed Attributes:** `viewBox`, `width`, `height`, `fill`, `stroke`, `stroke-width`, `d`, `cx`, `cy`, `r`, `x`, `y`, `rx`, `ry`, `x1`, `y1`, `x2`, `y2`, `points`, `transform`, `opacity`
</constraints>

<example>
<description>""A red circle with a blue square inside""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <circle cx=""50"" cy=""50"" r=""40"" fill=""red""/>
  <rect x=""30"" y=""30"" width=""40"" height=""40"" fill=""blue""/>
</svg>
```
</example>


Please ensure that the generated SVG code is well-formed, valid, and strictly adheres to these constraints. Focus on a clear and concise representation of the input description within the given limitations. Always give the complete SVG code with nothing omitted. Never use an ellipsis.

<description>""a lighthouse overlooking the ocean""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
","<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <circle cx=""128"" cy=""80"" r=""40"" fill=""white"" stroke=""black"" stroke-width=""2""/>
  <polygon points=""100,120 156,120 133,160"" fill=""brown""/>
  <path d=""M 100 160 L 156 160 L 133 180"" fill=""brown""/>
  <rect x=""100"" y=""180"" width=""20"" height=""40"" fill=""yellow""/>
  <path d=""M 128 200 L 128 256"" stroke=""black"" stroke-width=""2""/>
  
</svg>","<svg viewBox=""0 0 256 256"" width=""256"" height=""256""><circle cx=""128"" cy=""80"" r=""40"" fill=""white"" stroke=""black"" stroke-width=""2""/><polygon points=""100,120 156,120 133,160"" fill=""brown""/><path d=""M 100 160 L 156 160 L 133 180"" fill=""brown""/><rect x=""100"" y=""180"" width=""20"" height=""40"" fill=""yellow""/><path d=""M 128 200 L 128 256"" stroke=""black"" stroke-width=""2""/></svg>"
3,burgundy corduroy pants with patch pockets and silver buttons,"Generate SVG code to visually represent the following text description, while respecting the given constraints.
<constraints>
* **Allowed Elements:** `svg`, `path`, `circle`, `rect`, `ellipse`, `line`, `polyline`, `polygon`, `g`, `linearGradient`, `radialGradient`, `stop`, `defs`
* **Allowed Attributes:** `viewBox`, `width`, `height`, `fill`, `stroke`, `stroke-width`, `d`, `cx`, `cy`, `r`, `x`, `y`, `rx`, `ry`, `x1`, `y1`, `x2`, `y2`, `points`, `transform`, `opacity`
</constraints>

<example>
<description>""A red circle with a blue square inside""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <circle cx=""50"" cy=""50"" r=""40"" fill=""red""/>
  <rect x=""30"" y=""30"" width=""40"" height=""40"" fill=""blue""/>
</svg>
```
</example>


Please ensure that the generated SVG code is well-formed, valid, and strictly adheres to these constraints. Focus on a clear and concise representation of the input description within the given limitations. Always give the complete SVG code with nothing omitted. Never use an ellipsis.

<description>""burgundy corduroy pants with patch pockets and silver buttons""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
","<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <rect x=""50"" y=""50"" width=""156"" height=""156"" fill=""burlywood""/>
  <rect x=""80"" y=""110"" width=""50"" height=""50"" fill=""burlywood""/> 
  <rect x=""130"" y=""110"" width=""50"" height=""50"" fill=""burlywood""/>
  <circle cx=""90"" cy=""130"" r=""6"" fill=""silver""/>
  <circle cx=""140"" cy=""130"" r=""6"" fill=""silver""/>
</svg>","<svg viewBox=""0 0 256 256"" width=""256"" height=""256""><rect x=""50"" y=""50"" width=""156"" height=""156"" fill=""burlywood""/><rect x=""80"" y=""110"" width=""50"" height=""50"" fill=""burlywood""/><rect x=""130"" y=""110"" width=""50"" height=""50"" fill=""burlywood""/><circle cx=""90"" cy=""130"" r=""6"" fill=""silver""/><circle cx=""140"" cy=""130"" r=""6"" fill=""silver""/></svg>"
4,orange corduroy overalls,"Generate SVG code to visually represent the following text description, while respecting the given constraints.
<constraints>
* **Allowed Elements:** `svg`, `path`, `circle`, `rect`, `ellipse`, `line`, `polyline`, `polygon`, `g`, `linearGradient`, `radialGradient`, `stop`, `defs`
* **Allowed Attributes:** `viewBox`, `width`, `height`, `fill`, `stroke`, `stroke-width`, `d`, `cx`, `cy`, `r`, `x`, `y`, `rx`, `ry`, `x1`, `y1`, `x2`, `y2`, `points`, `transform`, `opacity`
</constraints>

<example>
<description>""A red circle with a blue square inside""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <circle cx=""50"" cy=""50"" r=""40"" fill=""red""/>
  <rect x=""30"" y=""30"" width=""40"" height=""40"" fill=""blue""/>
</svg>
```
</example>


Please ensure that the generated SVG code is well-formed, valid, and strictly adheres to these constraints. Focus on a clear and concise representation of the input description within the given limitations. Always give the complete SVG code with nothing omitted. Never use an ellipsis.

<description>""orange corduroy overalls""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
","<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
<rect x=""60"" y=""40"" width=""136"" height=""140"" fill=""orange"" stroke=""black""/>
</svg>","<svg viewBox=""0 0 256 256"" width=""256"" height=""256""><rect x=""60"" y=""40"" width=""136"" height=""140"" fill=""orange"" stroke=""black""/></svg>"
5,a purple silk scarf with tassel trim,"Generate SVG code to visually represent the following text description, while respecting the given constraints.
<constraints>
* **Allowed Elements:** `svg`, `path`, `circle`, `rect`, `ellipse`, `line`, `polyline`, `polygon`, `g`, `linearGradient`, `radialGradient`, `stop`, `defs`
* **Allowed Attributes:** `viewBox`, `width`, `height`, `fill`, `stroke`, `stroke-width`, `d`, `cx`, `cy`, `r`, `x`, `y`, `rx`, `ry`, `x1`, `y1`, `x2`, `y2`, `points`, `transform`, `opacity`
</constraints>

<example>
<description>""A red circle with a blue square inside""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <circle cx=""50"" cy=""50"" r=""40"" fill=""red""/>
  <rect x=""30"" y=""30"" width=""40"" height=""40"" fill=""blue""/>
</svg>
```
</example>


Please ensure that the generated SVG code is well-formed, valid, and strictly adheres to these constraints. Focus on a clear and concise representation of the input description within the given limitations. Always give the complete SVG code with nothing omitted. Never use an ellipsis.

<description>""a purple silk scarf with tassel trim""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
","<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <rect x=""20"" y=""20"" width=""216"" height=""180"" fill=""purple"" />
  <path d=""M20 180 l 20 20 l -20 20 z"" fill=""purple"" />
  <rect x=""220"" y=""180"" width=""36"" height=""60"" fill=""purple"" />
</svg>","<svg viewBox=""0 0 256 256"" width=""256"" height=""256""><rect x=""20"" y=""20"" width=""216"" height=""180"" fill=""purple""/><path d=""M20 180 l 20 20 l -20 20 z"" fill=""purple""/><rect x=""220"" y=""180"" width=""36"" height=""60"" fill=""purple""/></svg>"
6,a green lagoon under a cloudy sky,"Generate SVG code to visually represent the following text description, while respecting the given constraints.
<constraints>
* **Allowed Elements:** `svg`, `path`, `circle`, `rect`, `ellipse`, `line`, `polyline`, `polygon`, `g`, `linearGradient`, `radialGradient`, `stop`, `defs`
* **Allowed Attributes:** `viewBox`, `width`, `height`, `fill`, `stroke`, `stroke-width`, `d`, `cx`, `cy`, `r`, `x`, `y`, `rx`, `ry`, `x1`, `y1`, `x2`, `y2`, `points`, `transform`, `opacity`
</constraints>

<example>
<description>""A red circle with a blue square inside""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <circle cx=""50"" cy=""50"" r=""40"" fill=""red""/>
  <rect x=""30"" y=""30"" width=""40"" height=""40"" fill=""blue""/>
</svg>
```
</example>


Please ensure that the generated SVG code is well-formed, valid, and strictly adheres to these constraints. Focus on a clear and concise representation of the input description within the given limitations. Always give the complete SVG code with nothing omitted. Never use an ellipsis.

<description>""a green lagoon under a cloudy sky""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
","<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <defs>
    <linearGradient id=""skyGradient"" x1=""0"" y1=""0"" x2=""1"" y2=""0"">
      <stop offset=""0%"" stop-color=""#87CEEB""/>
      <stop offset=""100%"" stop-color=""#B0C4DE""/>
    </linearGradient>
  </defs>
  <rect width=""256"" height=""256"" fill=""url(#skyGradient)""/>
  <ellipse cx=""128"" cy=""192"" rx=""64"" ry=""48"" fill=""green""/>
</svg>","<svg viewBox=""0 0 256 256"" width=""256"" height=""256""><defs><linearGradient id=""skyGradient"" x1=""0"" y1=""0"" x2=""1"" y2=""0""><stop offset=""0%"" stop-color=""#87CEEB""/><stop offset=""100%"" stop-color=""#B0C4DE""/></linearGradient></defs><rect width=""256"" height=""256"" fill=""url(#skyGradient)""/><ellipse cx=""128"" cy=""192"" rx=""64"" ry=""48"" fill=""green""/></svg>"
7,crimson rectangles forming a chaotic grid,"Generate SVG code to visually represent the following text description, while respecting the given constraints.
<constraints>
* **Allowed Elements:** `svg`, `path`, `circle`, `rect`, `ellipse`, `line`, `polyline`, `polygon`, `g`, `linearGradient`, `radialGradient`, `stop`, `defs`
* **Allowed Attributes:** `viewBox`, `width`, `height`, `fill`, `stroke`, `stroke-width`, `d`, `cx`, `cy`, `r`, `x`, `y`, `rx`, `ry`, `x1`, `y1`, `x2`, `y2`, `points`, `transform`, `opacity`
</constraints>

<example>
<description>""A red circle with a blue square inside""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <circle cx=""50"" cy=""50"" r=""40"" fill=""red""/>
  <rect x=""30"" y=""30"" width=""40"" height=""40"" fill=""blue""/>
</svg>
```
</example>


Please ensure that the generated SVG code is well-formed, valid, and strictly adheres to these constraints. Focus on a clear and concise representation of the input description within the given limitations. Always give the complete SVG code with nothing omitted. Never use an ellipsis.

<description>""crimson rectangles forming a chaotic grid""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
","<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
<defs>
<linearGradient id=""gradient1"" x1=""0%"" y1=""0%"" x2=""100%"" y2=""100%"">
<stop offset=""0%"" stop-color=""#DC143C""/>
<stop offset=""100%"" stop-color=""#AD1457""/>
</linearGradient>
</defs>
<rect x=""0"" y=""0"" width=""256"" height=""256"" fill=""url(#gradient1)""/>
</svg>","<svg viewBox=""0 0 256 256"" width=""256"" height=""256""><defs><linearGradient id=""gradient1"" x1=""0%"" y1=""0%"" x2=""100%"" y2=""100%""><stop offset=""0%"" stop-color=""#DC143C""/><stop offset=""100%"" stop-color=""#AD1457""/></linearGradient></defs><rect x=""0"" y=""0"" width=""256"" height=""256"" fill=""url(#gradient1)""/></svg>"
8,purple pyramids spiraling around a bronze cone,"Generate SVG code to visually represent the following text description, while respecting the given constraints.
<constraints>
* **Allowed Elements:** `svg`, `path`, `circle`, `rect`, `ellipse`, `line`, `polyline`, `polygon`, `g`, `linearGradient`, `radialGradient`, `stop`, `defs`
* **Allowed Attributes:** `viewBox`, `width`, `height`, `fill`, `stroke`, `stroke-width`, `d`, `cx`, `cy`, `r`, `x`, `y`, `rx`, `ry`, `x1`, `y1`, `x2`, `y2`, `points`, `transform`, `opacity`
</constraints>

<example>
<description>""A red circle with a blue square inside""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <circle cx=""50"" cy=""50"" r=""40"" fill=""red""/>
  <rect x=""30"" y=""30"" width=""40"" height=""40"" fill=""blue""/>
</svg>
```
</example>


Please ensure that the generated SVG code is well-formed, valid, and strictly adheres to these constraints. Focus on a clear and concise representation of the input description within the given limitations. Always give the complete SVG code with nothing omitted. Never use an ellipsis.

<description>""purple pyramids spiraling around a bronze cone""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
","<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <g transform=""translate(128, 128)"">
    <polygon points=""0,0 50,40 100,0 50,-40"" fill=""purple""/>
    <polygon points=""50,40 100,0 150,40 100,0"" fill=""purple"" transform=""rotate(45)""/>
    <polygon points=""100,0 150,40 200,0 150,-40"" fill=""purple"" transform=""rotate(90)""/>
    <ellipse cx=""0"" cy=""0"" rx=""20"" ry=""20"" fill=""bronze""/>
  </g>
</svg>","<svg viewBox=""0 0 256 256"" width=""256"" height=""256""><g transform=""translate(128, 128)""><polygon points=""0,0 50,40 100,0 50,-40"" fill=""purple""/><polygon points=""50,40 100,0 150,40 100,0"" fill=""purple"" transform=""rotate(45)""/><polygon points=""100,0 150,40 200,0 150,-40"" fill=""purple"" transform=""rotate(90)""/><ellipse cx=""0"" cy=""0"" rx=""20"" ry=""20"" fill=""bronze""/></g></svg>"
9,magenta trapezoids layered on a transluscent silver sheet,"Generate SVG code to visually represent the following text description, while respecting the given constraints.
<constraints>
* **Allowed Elements:** `svg`, `path`, `circle`, `rect`, `ellipse`, `line`, `polyline`, `polygon`, `g`, `linearGradient`, `radialGradient`, `stop`, `defs`
* **Allowed Attributes:** `viewBox`, `width`, `height`, `fill`, `stroke`, `stroke-width`, `d`, `cx`, `cy`, `r`, `x`, `y`, `rx`, `ry`, `x1`, `y1`, `x2`, `y2`, `points`, `transform`, `opacity`
</constraints>

<example>
<description>""A red circle with a blue square inside""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <circle cx=""50"" cy=""50"" r=""40"" fill=""red""/>
  <rect x=""30"" y=""30"" width=""40"" height=""40"" fill=""blue""/>
</svg>
```
</example>


Please ensure that the generated SVG code is well-formed, valid, and strictly adheres to these constraints. Focus on a clear and concise representation of the input description within the given limitations. Always give the complete SVG code with nothing omitted. Never use an ellipsis.

<description>""magenta trapezoids layered on a transluscent silver sheet""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
","<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <rect x=""0"" y=""0"" width=""256"" height=""256"" fill=""url(#silverGradient)"" />
  <defs>
    <linearGradient id=""silverGradient"" x1=""0"" y1=""0"" x2=""0"" y2=""256"" >
      <stop offset=""0%"" stop-color=""silver"" />
      <stop offset=""100%"" stop-color=""white"" />
    </linearGradient>
  </defs>
  <polygon points=""120,160 200,160 200,40 120,40"" fill=""magenta"" />
  <polygon points=""50,120 100,120 100,20 50,20"" fill=""magenta"" transform=""translate(100,50) rotate(45)""/>
</svg>","<svg viewBox=""0 0 256 256"" width=""256"" height=""256""><rect x=""0"" y=""0"" width=""256"" height=""256"" fill=""url(#silverGradient)""/><defs><linearGradient id=""silverGradient"" x1=""0"" y1=""0"" x2=""0"" y2=""256""><stop offset=""0%"" stop-color=""silver""/><stop offset=""100%"" stop-color=""white""/></linearGradient></defs><polygon points=""120,160 200,160 200,40 120,40"" fill=""magenta""/><polygon points=""50,120 100,120 100,20 50,20"" fill=""magenta"" transform=""translate(100,50) rotate(45)""/></svg>"
10,a snowy plain,"Generate SVG code to visually represent the following text description, while respecting the given constraints.
<constraints>
* **Allowed Elements:** `svg`, `path`, `circle`, `rect`, `ellipse`, `line`, `polyline`, `polygon`, `g`, `linearGradient`, `radialGradient`, `stop`, `defs`
* **Allowed Attributes:** `viewBox`, `width`, `height`, `fill`, `stroke`, `stroke-width`, `d`, `cx`, `cy`, `r`, `x`, `y`, `rx`, `ry`, `x1`, `y1`, `x2`, `y2`, `points`, `transform`, `opacity`
</constraints>

<example>
<description>""A red circle with a blue square inside""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <circle cx=""50"" cy=""50"" r=""40"" fill=""red""/>
  <rect x=""30"" y=""30"" width=""40"" height=""40"" fill=""blue""/>
</svg>
```
</example>


Please ensure that the generated SVG code is well-formed, valid, and strictly adheres to these constraints. Focus on a clear and concise representation of the input description within the given limitations. Always give the complete SVG code with nothing omitted. Never use an ellipsis.

<description>""a snowy plain""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
","<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <rect width=""256"" height=""256"" fill=""white""/>
  <circle cx=""128"" cy=""128"" r=""64"" fill=""lightblue""/>
  <circle cx=""70"" cy=""80"" r=""10"" fill=""lightgrey""/>
  <circle cx=""180"" cy=""170"" r=""10"" fill=""lightgrey""/>
</svg>","<svg viewBox=""0 0 256 256"" width=""256"" height=""256""><rect width=""256"" height=""256"" fill=""white""/><circle cx=""128"" cy=""128"" r=""64"" fill=""lightblue""/><circle cx=""70"" cy=""80"" r=""10"" fill=""lightgrey""/><circle cx=""180"" cy=""170"" r=""10"" fill=""lightgrey""/></svg>"
11,black and white checkered pants,"Generate SVG code to visually represent the following text description, while respecting the given constraints.
<constraints>
* **Allowed Elements:** `svg`, `path`, `circle`, `rect`, `ellipse`, `line`, `polyline`, `polygon`, `g`, `linearGradient`, `radialGradient`, `stop`, `defs`
* **Allowed Attributes:** `viewBox`, `width`, `height`, `fill`, `stroke`, `stroke-width`, `d`, `cx`, `cy`, `r`, `x`, `y`, `rx`, `ry`, `x1`, `y1`, `x2`, `y2`, `points`, `transform`, `opacity`
</constraints>

<example>
<description>""A red circle with a blue square inside""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <circle cx=""50"" cy=""50"" r=""40"" fill=""red""/>
  <rect x=""30"" y=""30"" width=""40"" height=""40"" fill=""blue""/>
</svg>
```
</example>


Please ensure that the generated SVG code is well-formed, valid, and strictly adheres to these constraints. Focus on a clear and concise representation of the input description within the given limitations. Always give the complete SVG code with nothing omitted. Never use an ellipsis.

<description>""black and white checkered pants""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
","<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <rect x=""0"" y=""0"" width=""256"" height=""256"" fill=""black""/>
  <path d=""M0 64H64l64 64H128l64-64H192l-64-64H128l-64 64H64l-64-64z"" fill=""white""/>
  </svg>","<svg viewBox=""0 0 256 256"" width=""256"" height=""256""><rect x=""0"" y=""0"" width=""256"" height=""256"" fill=""black""/></svg>"
12,a starlit night over snow-covered peaks,"Generate SVG code to visually represent the following text description, while respecting the given constraints.
<constraints>
* **Allowed Elements:** `svg`, `path`, `circle`, `rect`, `ellipse`, `line`, `polyline`, `polygon`, `g`, `linearGradient`, `radialGradient`, `stop`, `defs`
* **Allowed Attributes:** `viewBox`, `width`, `height`, `fill`, `stroke`, `stroke-width`, `d`, `cx`, `cy`, `r`, `x`, `y`, `rx`, `ry`, `x1`, `y1`, `x2`, `y2`, `points`, `transform`, `opacity`
</constraints>

<example>
<description>""A red circle with a blue square inside""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <circle cx=""50"" cy=""50"" r=""40"" fill=""red""/>
  <rect x=""30"" y=""30"" width=""40"" height=""40"" fill=""blue""/>
</svg>
```
</example>


Please ensure that the generated SVG code is well-formed, valid, and strictly adheres to these constraints. Focus on a clear and concise representation of the input description within the given limitations. Always give the complete SVG code with nothing omitted. Never use an ellipsis.

<description>""a starlit night over snow-covered peaks""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
","<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <!-- Sky with stars -->
  <defs>
    <linearGradient id=""starlight"" x1=""0"" y1=""0"" x2=""100%"" y2=""100%"">
      <stop offset=""0%"" stop-color=""#0F1928""/>
      <stop offset=""100%"" stop-color=""#324762""/>
    </linearGradient>
  </defs>
  <rect width=""100%"" height=""100%"" fill=""url(#starlight)""/>
  <circle cx=""50"" cy=""50"" r=""10""/>

  <!-- Peaks -->
  <polygon points=""100,20 130,50 160,20"" fill=""#FFFFFF"" stroke=""#000000"" stroke-width=""1""/>
  <polygon points=""80,20 110,50 140,20"" fill=""#FFFFFF"" stroke=""#000000"" stroke-width=""1""/>
  <polygon points=""150,20 180,50 210,20"" fill=""#FFFFFF"" stroke=""#000000"" stroke-width=""1""/>

  <!-- Stars -->
  <!-- Repeat this pattern to add more stars -->
  <circle cx=""110"" cy=""80"" r=""2"" fill=""yellow""/>
</svg>","<svg viewBox=""0 0 256 256"" width=""256"" height=""256""><defs><linearGradient id=""starlight"" x1=""0"" y1=""0"" x2=""100%"" y2=""100%""><stop offset=""0%"" stop-color=""#0F1928""/><stop offset=""100%"" stop-color=""#324762""/></linearGradient></defs><rect width=""100%"" height=""100%"" fill=""url(#starlight)""/><circle cx=""50"" cy=""50"" r=""10""/><polygon points=""100,20 130,50 160,20"" fill=""#FFFFFF"" stroke=""#000000"" stroke-width=""1""/><polygon points=""80,20 110,50 140,20"" fill=""#FFFFFF"" stroke=""#000000"" stroke-width=""1""/><polygon points=""150,20 180,50 210,20"" fill=""#FFFFFF"" stroke=""#000000"" stroke-width=""1""/><circle cx=""110"" cy=""80"" r=""2"" fill=""yellow""/></svg>"
13,khaki triangles and azure crescents,"Generate SVG code to visually represent the following text description, while respecting the given constraints.
<constraints>
* **Allowed Elements:** `svg`, `path`, `circle`, `rect`, `ellipse`, `line`, `polyline`, `polygon`, `g`, `linearGradient`, `radialGradient`, `stop`, `defs`
* **Allowed Attributes:** `viewBox`, `width`, `height`, `fill`, `stroke`, `stroke-width`, `d`, `cx`, `cy`, `r`, `x`, `y`, `rx`, `ry`, `x1`, `y1`, `x2`, `y2`, `points`, `transform`, `opacity`
</constraints>

<example>
<description>""A red circle with a blue square inside""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <circle cx=""50"" cy=""50"" r=""40"" fill=""red""/>
  <rect x=""30"" y=""30"" width=""40"" height=""40"" fill=""blue""/>
</svg>
```
</example>


Please ensure that the generated SVG code is well-formed, valid, and strictly adheres to these constraints. Focus on a clear and concise representation of the input description within the given limitations. Always give the complete SVG code with nothing omitted. Never use an ellipsis.

<description>""khaki triangles and azure crescents""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
","<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
<polygon points=""50,100 100,50 150,100"" fill=""khaki"" />
<path d=""M50 150 Q 100 200 150 150"" stroke=""azure"" stroke-width=""5"" />
</svg>","<svg viewBox=""0 0 256 256"" width=""256"" height=""256""><polygon points=""50,100 100,50 150,100"" fill=""khaki""/><path d=""M50 150 Q 100 200 150 150"" stroke=""azure"" stroke-width=""5""/></svg>"
14,a maroon dodecahedron interwoven with teal threads,"Generate SVG code to visually represent the following text description, while respecting the given constraints.
<constraints>
* **Allowed Elements:** `svg`, `path`, `circle`, `rect`, `ellipse`, `line`, `polyline`, `polygon`, `g`, `linearGradient`, `radialGradient`, `stop`, `defs`
* **Allowed Attributes:** `viewBox`, `width`, `height`, `fill`, `stroke`, `stroke-width`, `d`, `cx`, `cy`, `r`, `x`, `y`, `rx`, `ry`, `x1`, `y1`, `x2`, `y2`, `points`, `transform`, `opacity`
</constraints>

<example>
<description>""A red circle with a blue square inside""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <circle cx=""50"" cy=""50"" r=""40"" fill=""red""/>
  <rect x=""30"" y=""30"" width=""40"" height=""40"" fill=""blue""/>
</svg>
```
</example>


Please ensure that the generated SVG code is well-formed, valid, and strictly adheres to these constraints. Focus on a clear and concise representation of the input description within the given limitations. Always give the complete SVG code with nothing omitted. Never use an ellipsis.

<description>""a maroon dodecahedron interwoven with teal threads""</description>
```svg
<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
","<svg viewBox=""0 0 256 256"" width=""256"" height=""256"">
  <polygon points=""128,0 256,64 192,128 256,192 128,256 64,192 0,128 64,64 0,0"" fill=""maroon""/>
  <polygon points=""64,32 96,64 128,32 96,0 64,32  z"" fill=""teal""/>
  <polygon points=""64,128 96,192 128,128 96,160 64,128  z"" fill=""teal""/>
  <polygon points=""64,224 96,256 128,224 96,240 64,224  z"" fill=""teal""/>
</svg>","<svg viewBox=""0 0 256 256"" width=""256"" height=""256""><polygon points=""128,0 256,64 192,128 256,192 128,256 64,192 0,128 64,64 0,0"" fill=""maroon""/><polygon points=""64,32 96,64 128,32 96,0 64,32  z"" fill=""teal""/><polygon points=""64,128 96,192 128,128 96,160 64,128  z"" fill=""teal""/><polygon points=""64,224 96,256 128,224 96,240 64,224  z"" fill=""teal""/></svg>"
